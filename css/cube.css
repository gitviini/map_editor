@keyframes rotate {
  0% {
    transform: rotate3d(0, 1, 0, 0);
  }
  50% {
    transform: rotate3d(0, 1, 0, 360deg);
  }
  100% {
    transform: rotate3d(0, 0, 0, 0);
  }
}
* {
  --face-size: 50px;
  --face-distance: 25px;
  transform-style: preserve-3d;
}

.model {
  display: flex;
  flex-flow: column;
  justify-content: center;
  align-items: center;
  pointer-events: all;
  width: 100%;
  height: 60px;
  animation: none;
  cursor: pointer;
}
.model:hover {
  animation: rotate 10s linear;
  animation-iteration-count: infinite;
  background-color: rgba(255, 255, 255, 0.0666666667);
}
.model .cube {
  pointer-events: all;
  position: absolute;
  display: flex;
  flex-flow: column;
  justify-content: center;
  align-items: center;
  width: var(--width-cube);
  height: var(--width-cube);
  cursor: pointer;
  transform: translateX(0px) translateY(0px) translateZ(0px) rotateX(0deg) rotateY(0deg) rotateZ(0deg);
}
.model .cube .face {
  position: absolute;
  display: flex;
  flex-flow: column;
  justify-content: center;
  align-items: center;
  width: var(--width-cube);
  height: var(--width-cube);
  color: #fff;
  box-sizing: border-box;
  background-color: #635985;
  border: none;
}
.model .cube .front {
  transform: translateZ(calc(var(--width-cube) / 2));
}
.model .cube .right {
  transform: rotateY(90deg) translateZ(calc(var(--width-cube) / 2));
}
.model .cube .back {
  filter: brightness(70%);
  transform: rotateY(180deg) translateZ(calc(var(--width-cube) / 2));
}
.model .cube .left {
  filter: brightness(70%);
  transform: rotateY(-90deg) translateZ(calc(var(--width-cube) / 2));
}
.model .cube .top {
  transform: rotateX(90deg) translateZ(calc(var(--width-cube) / 2));
}
.model .cube .bottom {
  filter: brightness(50%);
  direction: rtl;
  transform: rotateY(180deg) rotateX(90deg) translateZ(calc(-1 * var(--width-cube) / 2));
}

.container-cube {
  display: flex;
  width: var(--face-size);
  height: var(--face-size);
  flex-flow: column;
  justify-content: center;
  align-items: center;
  transform: rotate3d(1, 0, 0, -90deg);
}
.container-cube:hover {
  pointer-events: all;
}
.container-cube:hover .cube .face, .container-cube:hover .back, .container-cube:hover .left, .container-cube:hover .bottom {
  filter: brightness(1.15);
}
.container-cube .cube {
  position: absolute;
  display: flex;
  flex-flow: column;
  justify-content: center;
  align-items: center;
  width: var(--width-cube);
  height: var(--width-cube);
  transform: rotate3d(1, 0, 0, 90deg);
}
.container-cube .cube .face {
  position: absolute;
  display: flex;
  flex-flow: column;
  justify-content: center;
  align-items: center;
  width: var(--face-size);
  height: var(--face-size);
  color: #fff;
  margin: 10px;
  opacity: 1;
}
.container-cube .cube * {
  box-sizing: border-box;
  background-color: #fff;
  border: none;
  outline: none;
}
.container-cube .cube .right {
  display: var(--right);
  transform: rotateY(90deg);
}
.container-cube .cube .back {
  display: var(--back);
  filter: brightness(70%);
  transform: rotateY(180deg);
}
.container-cube .cube .left {
  display: var(--left);
  filter: brightness(70%);
  transform: rotateY(-90deg);
}
.container-cube .cube .top {
  display: var(--top);
  transform: rotateX(90deg);
}
.container-cube .cube .bottom {
  display: var(--bottom);
  filter: brightness(50%);
  direction: rtl;
  transform: rotateY(180deg) rotateX(90deg);
}

.cube {
  pointer-events: all;
  display: flex;
  flex-flow: column;
  justify-content: center;
  align-items: center;
  width: var(--width-cube);
  height: var(--width-cube);
  transform: rotate3d(1, 0, 0, -90deg);
}
.cube * {
  box-sizing: border-box;
}
.cube .face {
  position: absolute;
  display: flex;
  flex-flow: column;
  justify-content: center;
  align-items: center;
  width: var(--face-size);
  height: var(--face-size);
  color: #fff;
  border: none;
  outline: 1px solid var(--face-border);
  opacity: 1;
  background-color: #ddd;
}

.front {
  transform: translateZ(var(--face-distance));
}

.right {
  transform: rotateY(90deg) translateZ(var(--face-distance));
}

.back {
  transform: rotateY(180deg) translateZ(var(--face-distance));
}

.left {
  transform: rotateY(-90deg) translateZ(var(--face-distance));
}

.top {
  transform: rotateX(90deg) translateZ(var(--face-distance));
}

.bottom {
  transform: rotateY(180deg) rotateX(90deg) translateZ(calc(-1 * var(--face-distance)));
}

.cube.show .face {
  opacity: 0.08;
}

.transparent .cube .face {
  border: 2px solid var(--border);
  opacity: 0.1;
  background-color: var(--bg);
}

.cube[color=transparent] {
  --up: flex;
  --bottom: flex;
  --right: flex;
  --left: flex;
  --front: flex;
  --back: flex;
}

.orientation {
  position: absolute;
  bottom: 50px;
  left: 50px;
  transform: rotate3d(0, 0, 0, -90deg);
}
.orientation .face {
  color: var(--color);
  background-color: var(--danger);
  border: 2px solid var(--color);
  --face-distance: 25px;
  --face-size: 50px;
  font-size: 0.9rem;
}/*# sourceMappingURL=cube.css.map */