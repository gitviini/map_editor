@keyframes rotate {
    0% {
        transform: rotate3d(0, 1, 0, 0);
    }

    50% {
        transform: rotate3d(0, 1, 0, 360deg);
    }

    100% {
        transform: rotate3d(0, 0, 0, 0);
    }
}

* {
    --face-size: 50px;
    --face-distance: 25px;
    transform-style: preserve-3d;
}

.model {
    display: flex;
    flex-flow: column;
    justify-content: center;
    align-items: center;
    pointer-events: all;
    width: 100%;
    height: 60px;
    animation: none;
    cursor: pointer;

    &:hover {
        animation: rotate 10s linear;
        animation-iteration-count: infinite;
        background-color: #fff1;
    }

    .cube {
        pointer-events: all;
        position: absolute;
        display: flex;
        flex-flow: column;
        justify-content: center;
        align-items: center;
        width: var(--width-cube);
        height: var(--width-cube);
        cursor: pointer;
        transform: translateX(0px) translateY(0px) translateZ(0px) rotateX(0deg) rotateY(0deg) rotateZ(0deg);

        .face {
            position: absolute;
            display: flex;
            flex-flow: column;
            justify-content: center;
            align-items: center;
            width: var(--width-cube);
            height: var(--width-cube);
            color: #fff;
            box-sizing: border-box;
            background-color: #635985;
            border: none;
        }

        .front {
            transform: translateZ(calc(var(--width-cube) / 2));
        }

        .right {
            transform: rotateY(90deg) translateZ(calc(var(--width-cube) / 2));
        }

        .back {
            filter: brightness(70%);
            transform: rotateY(180deg) translateZ(calc(var(--width-cube) / 2));
        }

        .left {
            filter: brightness(70%);
            transform: rotateY(-90deg) translateZ(calc(var(--width-cube) / 2));
        }

        .top {
            transform: rotateX(90deg) translateZ(calc(var(--width-cube) / 2));
        }

        .bottom {
            filter: brightness(50%);
            direction: rtl;
            transform: rotateY(180deg) rotateX(90deg) translateZ(calc(-1 * var(--width-cube) / 2));
        }

    }
}

.container-cube {
    display: flex;
    width: var(--face-size);
    height: var(--face-size);
    flex-flow: column;
    justify-content: center;
    align-items: center;
    transform: rotate3d(1, 0, 0, -90deg);

    &:hover{
        pointer-events: all;
        .cube .face, .back, .left, .bottom{
            filter: brightness(1.15);
        }
    }

    .cube {
        position: absolute;
        display: flex;
        flex-flow: column;
        justify-content: center;
        align-items: center;
        width: var(--width-cube);
        height: var(--width-cube);
        transform: rotate3d(1, 0, 0, 90deg);

        .face {
            position: absolute;
            display: flex;
            flex-flow: column;
            justify-content: center;
            align-items: center;
            width: var(--face-size);
            height: var(--face-size);
            color: #fff;
            margin: 10px;
            opacity: 1;
        }

        * {
            box-sizing: border-box;
            background-color: #fff;
            border: none ;
            outline: none;
        }

        .right {
            display: var(--right);
            transform: rotateY(90deg);
        }

        .back {
            display: var(--back);
            filter: brightness(70%);
            transform: rotateY(180deg);
        }

        .left {
            display: var(--left);
            filter: brightness(70%);
            transform: rotateY(-90deg);
        }

        .top {
            display: var(--top);
            transform: rotateX(90deg);
        }

        .bottom {
            display: var(--bottom);
            filter: brightness(50%);
            direction: rtl;
            transform: rotateY(180deg) rotateX(90deg);
        }

    }
}

.cube {
    pointer-events: all;
    display: flex;
    flex-flow: column;
    justify-content: center;
    align-items: center;
    width: var(--width-cube);
    height: var(--width-cube);
    transform: rotate3d(1, 0, 0, -90deg);

    * {
        box-sizing: border-box;
    }

    .face {
        position: absolute;
        display: flex;
        flex-flow: column;
        justify-content: center;
        align-items: center;
        width: var(--face-size);
        height: var(--face-size);
        color: #fff;
        border: none;
        outline: 1px solid var(--face-border);
        opacity: 1;
        background-color: #ddd;
    }
}

.front {
    transform: translateZ(var(--face-distance));
}

.right {
    transform: rotateY(90deg) translateZ(var(--face-distance));
}

.back {
    transform: rotateY(180deg) translateZ(var(--face-distance));
}

.left {
    transform: rotateY(-90deg) translateZ(var(--face-distance));
}

.top {
    transform: rotateX(90deg) translateZ(var(--face-distance));
}

.bottom {
    transform: rotateY(180deg) rotateX(90deg) translateZ(calc(-1 * var(--face-distance)));
}

.cube.show {
    .face {
        opacity: 0.08;
    }
}

.transparent{
    .cube {
        .face {
            border: 2px solid var(--border);
            opacity: 0.1;
            background-color: var(--bg);
        }
    }
}

.cube[color="transparent"]{
    --up: flex;
    --bottom: flex;
    --right: flex;
    --left: flex;
    --front: flex;
    --back: flex;
}

.orientation{
    position: absolute;
    bottom: 50px;
    left: 50px;
    .face{
        color: var(--color);
        background-color: var(--danger);
        border: 2px solid var(--color);
        --face-distance: 25px;
        --face-size: 50px;
        font-size: 0.9rem;
        
    }
    transform: rotate3d(0, 0, 0, -90deg);
}